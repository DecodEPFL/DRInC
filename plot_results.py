"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Use this script to plot the .csv files generated by the experiments.
Give the argument "scatter" to plot the results as a scatter plot, or "bars" to
plot them as a box and whiskers plot.

If the files are not in the "results/" folder, you need to enter the path to
the enclosing folder as a second argument when running the script.

Copyright Jean-Sebastien Brouillon (2024)
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

import sys as system
import matplotlib.pyplot as plt
from experiments.read_results import plot_bars, plot_scatter


def plot_results(path, plot_func):
    # Plot costs
    for file in ['double_integrator_beta.csv',
                 'double_integrator_bimodal_gaussian.csv']:
        plot_func(path + '/' + file, ['Realized control cost',
                                      'Realized constraint violations [%]'])

    # # Plot constraint violations
    # for file in ['double_integrator_viol_beta.csv',
    #              'double_integrator_viol_bimodal_gaussian.csv']:
    #     plot_func(path + '/' + file, 'Realized constraint violations [%]')

    # Show all four plots
    plt.show()


if __name__ == "__main__":
    # Check the arguments
    if len(system.argv) < 2:
        raise ValueError("You must provide the type of plot as an argument.")
    if system.argv[1] not in ["scatter", "bars"]:
        raise ValueError("The first argument must be 'scatter' or 'bars'.")

    # If the path to the results is not provided, the default is "results/"
    plot_results(system.argv[2] if len(system.argv) > 2 else "results",
                 plot_scatter if system.argv[1] == "scatter" else plot_bars)
