"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Use this script to plot the .csv files generated by the experiments.
Give the argument "scatter" to plot the results as a scatter plot, or "bars" to
plot them as a box and whiskers plot.

If the files are not in the "results/" folder, you need to enter the path to
the enclosing folder as a second argument when running the script.

Copyright Jean-Sebastien Brouillon (2024)
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

import sys as system
import matplotlib.pyplot as plt
import tikzplotlib
from experiments.read_results import plot_bars, plot_scatter


def plot_results(path, plot_func):
    # Tikz bugfixes
    scat_ticks = "{0.015,0.02,0.04,0.06,0.08,0.1,0.12}"

    # Plot costs
    for file in ['double_integrator_beta.csv',
                 'double_integrator_bimodal_gaussian.csv']:
        plot_func(path + '/' + file, ['Realized control cost',
                                      'Realized constraint violations [%]'])
        tikzplotlib.save(path + '/' + file.split(".")[0] + ".tex",
                         axis_height='4.8cm', axis_width='8.4cm', textsize=6.0,
                         extra_axis_parameters=["xmajorticks=true",
                                                "ymajorticks=true",
                                                "ylabel style={yshift=-0.3cm},",
                                                "legend style={font=\\small},"]
                         + (["xticklabels=" + scat_ticks, "xtick=" + scat_ticks]
                         if plot_func == plot_scatter else []))

    plt.show()



if __name__ == "__main__":
    # Check the arguments
    if len(system.argv) < 2:
        raise ValueError("You must provide the type of plot as an argument.")
    if system.argv[1] not in ["scatter", "bars"]:
        raise ValueError("The first argument must be 'scatter' or 'bars'.")

    # If the path to the results is not provided, the default is "results/"
    plot_results(system.argv[2] if len(system.argv) > 2 else "results",
                 plot_scatter if system.argv[1] == "scatter" else plot_bars)
